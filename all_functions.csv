"name","description"
"get_params","Configuration / Initialization settings to build the ALTUM and model"
"connect_to_dbs","Connect to databases"
"get_params_from_file","Loads the parameter object from an initialization file."
"prompt_for_ini_location","Prompt the user for the location of their initialization file. Verifies the user input that the file exists."
"load_libraries","Loads the `imidexR2` package and iteratively loads functions from the `R` subfolders."
"set_params_datetime","Function used to modify the date and time in the parameters object, used to determine the demarcation point where the data is truncated."
"set_working_directory","Function used to set the RDS directory on the params object, including locations to X and Y dataset files."
"setup_logging","Sets up the futile logger"
"build_ed_visit_models_version","Build models for future ED visits for specified DEV version"
"build_dx_residual_codes_illness_models_version","Build models for primary diagnosis category residual codes, unclassified, all E codes, 259 and 260 for specified DEV version"
"build_dx_health_status_illness_models_version","Build models for primary diagnosis category illdefinied conditions and factors influencing health status for specified DEV version"
"build_dx_mental_illness_models_version","Build models for primary diagnosis category mental illness for specified DEV version"
"build_dx_mental_and_neoplasms",""
"build_dx_congenital_models_version","Build models for primary diagnosis category congenital anomalies for specified DEV version"
"build_dx_pregnancy_models_version","Build models for primary diagnosis category complications of pregnancy, childbirth, and the puerperium for specified DEV version"
"build_dx_perinatal_models_version","Build models for primary diagnosis category conditions originating in the perinatal period for specified DEV version"
"build_dx_endocrine_models_version","Build models for primary diagnosis category endocrine, nutritional, and metabolic diseases and immunity disorders for specified DEV version"
"build_ed_and_endocrine_models_version",""
"build_dx_injury_models_version","Build models for primary diagnosis category injury and poisoning for specified DEV version"
"build_dx_neoplasms_models_version","Build models for primary diagnosis category neoplasms for specified DEV version"
"build_dx_infectious_models_version","Build models for primary diagnosis category infectious and parasitic diseases for specified DEV version"
"build_dx_genitourinary_and_blood_models_version",""
"build_dx_genitourinary_models_version","Build models for primary diagnosis category diseases of the genitourinary system for specified DEV version"
"build_dx_blood_models_version","Build models for primary diagnosis category diseases of the blood and bloodforming organs for specified DEV version"
"build_dx_circulatory_models_version","Build models for primary diagnosis category diseases of the circulatory system for specified DEV version"
"build_dx_nerve_models_version","Build models for primary diagnosis category diseases of the nervous system and sense organs for specified DEV version"
"build_dx_musculoskeletal_models_version","Build models for primary diagnosis category diseases of the musculoskeletal system and connective tissue for specified DEV version"
"build_dx_skin_models_version","Build models for primary diagnosis category diseases of the skin and subcutaneous tissue"
"build_dx_digestive_and_musculoskeletal_models_version",""
"build_dx_digestive_models_version","Build models for primary diagnosis category diseases of the digestive system for specified DEV version"
"build_dx_respiratory_models_version","Build models for primary diagnosis category diseases of the respiratory system for specified DEV version"
"build_med_claim_models_version","Build models for med claim paid amts for specified DEV version"
"build_hospitalization_event_models_version","Build models for hospitalization events for specified DEV version"
"build_change_in_total_paid_amt_models","TODO"
"build_med_claim_models","TODO"
"build_hospitalization_event_models","TODO"
"build_models","Builds all of the GBA models"
"rebuild_models","Rebuilds models based on prior variables that were selected. Eliminates vars with a negative MSE. While this works, it did not show to improve model performance."
"get_blocked_variables","List of variables to exclude as candidate predictor variables."
"build_version_models","Builds all of the GBA models of a specified DEV version"
"discretize_ivs","Discretizes all of the independent variables, applies credibility adjustments, and report bin values."
"generate_lift_curves_for_all_models",""
"get_predictor_vars_from_head_version_dir","Gets all of the predictor variables from all models stored in the latest working development directory"
"load_all_models_from_head_version_dir","Loads all of the model files that are in the head version directory."
"get_model_dir","Gets the resource directory for models"
"get_model_files","Gets all of the model files out of the resource directory"
"get_models","Loads all the model RDS in a list of models."
"get_root_dir","Returns the root directory for model outputs"
"get_head_version_dir","Returns head version directory"
"get_head_iv_file","Returns independent variable file from head version directory"
"get_head_dv_file","Returns dependent variable file from head version directory"
"get_version_dir","Returns specified version directory"
"get_version_iv_file","Returns independent variable file from head version directory"
"get_version_dv_file","Returns dependent variable file from head version directory"
"get_next_version_number","Returns next version number for root directory"
"get_current_version_number","Returns the current version number in root directory"
"create_version_dir","Creates the next version directory in the root directory"
"build_dataset_version","Runs get_preprocessed_data() and saves to next version directory"
"promote_models","Promotes the models from the development to the production resource directory"
"get_all_model_ids_in_working_dir","Lists all the model ids that are saved in the working directory"
"promote_all_models","Promotes all models that are in the working directory to version control directory (you still need to check in)"
"unzip_file","Unzips a single file from zip into a specified location"
"delete_file","Deletes a file"
"unzip_files","Unzips multiple files from zip into a specified location"
"run_ahh_importing","Determines which AHH data to import (case mgmt or precert) and imports"
"run_vba_importing","Determines which VBA data to import (claim or eligibility) and imports"
"check_prod_data_import","Checks to make sure that all data has been imported when expected (uses import_log table in DB)"
"get_last_date","Returns last date by day of week https://stackoverflow.com/questions/28971638/r-obtaining-last-fridays-date/28972015#28972015"
"build_dataset","TODO"
"slice_dataset_by_interval","Split the X, XRF, and Y datasets up by day, saves individual files to the RDS directory"
"get_preprocessed_data","Overall pre-processing function for building dv and iv datasets"
"get_iv_controller","returns vector of names of pp_iv_* functions for running in get_preprocessed_data()"
"run_pp_iv_function","Function to run pp_iv_* function in in get_preprocessed_data()"
"run_pp_iv_error","Executed when an error occurs in run_pp_iv_function()"
"cbind_iv_list","Merges output of pp_iv_* functions (in list) into the final longitudinal IV dataset."
"flog_iv_dv_table_stats","Flog.info of number of rows and columns, unique person IDs, min and max sample dates"
"try_main_processing","main_processing function surrounded in a tryCatch block for better error logging."
"main_processing","Main production processing routine the preprocesses the raw data, checks for data errors, run the data through the models, producing predictions. Then it runs the explainer and the rule engine. Finally, saving everything to a csv."
"get_processed_production_data","Returns xy,xc and predictions in a list, can include scores and reasons in output"
"get_dv_id","Returns member names with subscriber_id and member_seq for CSV report"
"get_previous_paid_and_hosp","Returns data.table object of total paid amounts and hospitalizations for the previous 90 and 365 days"
"conform_data","Adds any required variables the may have not been computed, usually as a result of data-driven variables. Also subsets to only those variables that are required for either model processing or rule processing."
"get_model_files","Get's a list of files where all the models are"
"process_models","Processes the xrf dataset through all of the models"
"get_reason_files","Get's all of the bin files used by the explainer"
"process_reasons","Use the predictions to develop explain reasons for why high or low"
"process_route","Use the predictions to route intervention"
"runFun","Runs the X data preprocessing function passed to it with exception handling."
"runFunErr","Executed when an error occurs in runFun"
"runFunWarn","TODO"
"save_results_to_db2","TODO"
"get_next_result_id","TODO"
"get_next_reason_id",""
"check_if_data_already_present","Checks if a model has already been run for the specified date."
"delete_data_as_of_datetime","Deletes records from the model results table for the specified date"
"process_scores","Process the predictions into scores for all models by using the scoring cross reference established in development."
"setup_prod","Sets up the production architecture, including profiling for data validation, explain reasons, merging XRF datasets across model runs, preparing the ""makeRF"" context, confidence intervals, payor grid, and provider grids."
"prepare_validation_profile","Prepares the validation profile that is used in production for data validation"
"get_all_predictions_from_rf","Gets all of the predictions attached to the random forest object (training and test -- if it exists)."
"run_all_predictions","Gets all the predictions by running the xrf dataset through all of the models"
"prepare_explainer","Prepares reasons files NOTE - when adding 'reason' column to Excel, add ' in front of"
"prepare_makeRFContext","Reads in the XRF and saves out the context data (naVals, vLevels, outlierBounds, colClasses)"
"replay_prod","Replays production processing over a time window specified by start and end dates"
"merge_reasons","Merges reasons between two reason files"
"iMFV2","Gets the most frequent value of x TODO rebuild in imidexR2"
"iMFVF2","Gets the frequency of the most frequent value of x"
"iProfile.data.table2","iProfile.data.table() with warnings->NA TODO rebuild in imidexR2 TODO - move to imidexR2 and rebuild"
"prepare_scoring_xref","Develops the scoring cross reference in development for use in production. Gets all models and names from source directory then iterates through all models to create scoring xref file."
"install_packages","Installs the libraries needed for GBA Get Rtools first - manual install: https://cran.r-project.org/bin/windows/Rtools/ make sure to do `writeLines('PATH=""${RTOOLS40_HOME}\\usr\\bin;${PATH}""', con = ""~/.Renviron"")`"
"get_model_ids","TODO"
"get_explainer_vars","TODO"
"get_dv","Gets the dependent variable dataset from RDS"
"get_iv","Gets the independent variable dataset from RDS"
"get_dev_predictor_vars","Get the list of predictors for all the models for the most recent DEV version from RDS and interrogating the model."
"get_dev_model_files","Gets a list of files where all the models are for the most recent DEV version"
"get_dv_paid_and_hosp_only","Return only dependent variables for med_claim_paid_amt and hospitalization_event"
"set_floor_date","Create a new date column that floors a specified date column to a specified unit"
"iCleanCorpus2","Cleans text"
"get_required_vars","Get the list of X variables that are required for all of the models and the rule engine."
"get_experian_vars",""
"get_predictor_vars","Get the list of predictors for all the models by loading them from RDS and interrogating the model."
"trace_var","Traces a list of XRF variables back to the source X variable names."
"untrace_var","Traces a list of X variable names back to the resulting XRF variable names"
"pp_dv","Function to produce dependent variable dataset"
"pp_dv_dev","Produces longitudinal dataset target (dependent) variables for training models."
"pp_dv_prod","Builds ""dependent variables"" (dv) object for input into IV functions for running inference"
"pp_iv_case_mgmt","Creates independent variables derived for case management data"
"get_fanned_out_case_mgmt_dates","Creates one day per on case mgmt per member rows - columns for type / and an any column"
"pp_iv_dental_claim","Creates independent variables derived for dental claims data"
"pp_iv_eligibility","Creates independent variables derived for eligibility data"
"pp_iv_experian","Creates independent variables derived from Experian data"
"pp_iv_med_claim","Creates independent variables derived for med claims data"
"pp_iv_precert","Creates independent variables derived from precert data"
"pp_iv_provider","Creates provider independent variables derived from med claims data"
"pp_iv_rx","Creates independent variables derived for medications data"
"pp_iv_temporal","Creates independent variables derived from temporal data. Right now, WHO flu data. For more info: https://www.who.int/influenza/gisrs_laboratory/flunet/en/. https://www.who.int/about/who-we-are/publishing-policies/data-policy/terms-and-conditions. Prohibited Uses. You will not sell or otherwise transfer the Datasets and/or data contained therein to any third party, except within the Licensed Use. You will not use the Datasets for any other purpose and/or in any other manner than as expressly provided herein, nor attempt to de-anonymise the Datasets. Datasets shall not be used for or in conjunction with the promotion of a commercial enterprise and/or its product(s) or service(s), and/or in any way that suggests that WHO endorses any specific company, products or services. Furthermore, you shall not use the Datasets in a manner that falsifies or misrepresents their content."
"pp_iv_wellview","Creates independent variables derived from wellview data"
"get_person_roll_cols","Returns vector of columns for rolling off of for datasets"
"fanOutDatetimes","Fans out dates"
"get_ssn_lookup","In cases of SSN typos, this returns back groups of SSNs (with one preferred) based on names, dob, and last 4 digits of SSN"
"iCleanCorpus2","TODO move me to imidexR2"
"get_tm_vars","get text mined variables from a column in a data.table"
"cbind_list","cbinds a list of data.tables together and returns a single data.table"
"bool_to_int_fun","converts a boolean vector to integer (and if numeric, also converts to integer"
"over_1_to_1_fun","converts all >1 values to 1 in a vector"
"aggregate_utilization","Aggregates utilization_star_data by 2 dimensions"
"aggregate_variance","Aggregates variance_star_data by 2 dimensions"
"build_rpt_utilization","Builds and saves utilization report to database"
"build_rpt_rolling_cases","Builds rolling open and closed cases rpt section of landing page"
"build_rpt_variance","Builds and saves variance report to database"
"get_prepost_summary","Returns pre-post analysis summary table"
"get_cohort_summary","Returns cohort analysis summary table"
"plot_prepost_cohort_validation","Fully customizeable function to return a validation plot for prepost or cohort analysis"
"plot_cohort_validation_person_ids","Subset of plot_prepost_cohort_validation() with pre-specified parameters to return validation plot with cohort analysis on the x-axis and person IDs on the y-axis"
"plot_prepost_validation_person_ids","Subset of plot_prepost_cohort_validation() with pre-specified parameters to return validation plot with prepost analysis on the x-axis and person IDs on the y-axis"
"plot_cohort_validation_claim_numbers","Subset of plot_prepost_cohort_validation() with pre-specified parameters to return validation plot with cohort analysis on the x-axis and claim numbers on the y-axis"
"plot_prepost_validation_claim_numbers","Subset of plot_prepost_cohort_validation() with pre-specified parameters to return validation plot with prepost analysis on the x-axis and claim numbers on the y-axis"
"plot_prepost_cohort_results","Fully customizeable function to return an analysis results plot for prepost or cohort analysis"
"plot_prepost_paid_amt_results","Subset of plot_prepost_cohort_summary() with pre-specified parameters to return an analysis results plot with prepost analysis on the x-axis and delta average paid amount on the y-axis"
"plot_prepost_hosp_visits_results","Subset of plot_prepost_cohort_summary() with pre-specified parameters to return an analysis results plot with prepost analysis on the x-axis and delta average hospitalizations on the y-axis"
"plot_prepost_ed_visits_results","Subset of plot_prepost_cohort_summary() with pre-specified parameters to return an analysis results plot with prepost analysis on the x-axis and delta average ED visits on the y-axis"
"plot_cohort_paid_amt_results","Subset of plot_prepost_cohort_summary() with pre-specified parameters to return an analysis results plot with cohort analysis on the x-axis and average paid amount on the y-axis"
"plot_cohort_hosp_visits_results","Subset of plot_prepost_cohort_summary() with pre-specified parameters to return an analysis results plot with cohort analysis on the x-axis and average hospitalizations on the y-axis"
"plot_cohort_ed_visits_results","Subset of plot_prepost_cohort_summary() with pre-specified parameters to return an analysis results plot with cohort analysis on the x-axis and average ED events on the y-axis"
"get_prepost_wellview_summary","Returns summary table for prepost analysis of Wellview interventions"
"get_prepost_case_mgmt_summary","Returns summary table for prepost analysis of Case Mgmt interventions"
"get_cohort_wellview_summary","Returns summary table for prepost analysis of Wellview interventions"
"get_cohort_case_mgmt_summary","Returns summary table for prepost analysis of Wellview interventions"
"get_cohort_prepost_med_claim","Returns med claim db for cohort or pre/post analysis"
"set_wellview_solution_cols","Sets Wellview Solution columns to output of get_cohort_prepost_med_claim()"
"set_case_mgmt_cols","Sets Case Managment columns to output of get_cohort_prepost_med_claim()"
"set_vars_stats_per_month","Return a dv or iv file with additional monthly calculated stats on all numeric rows"
"plot_control_charts","Returns a control chart plot with upper control limits and lower control limits and +/- 3 SD from the mean"
"plot_records_per_time","Returns a ggplot2 object of specified diagnostic category records per time"
"plot_percent_records_per_time_per_member","Returns ggplot2 object of percent of records from a specified diagnosis category per specified time per member"
"plot_hospitalizations_per_time","Returns ggplot2 object of hospitalizations per specified diagnosis category per specified time window"
"plot_paid_amt_per_time","Returns ggplot2 object of paid amount per specified diagnosis category per specified time window"
"get_disease_dx_list","Returns list object of all diagnosis names and grep search criteria for diagnosis code columns"
"get_disease_dx_table","Returns a data.table object version of the list output of get_disease_dx_list()"
"get_dx_summary","Returns data.table of demographic summary for specified diagnosis"
"get_all_dx_summary","Returns data.table of demographic summaries for all diagnoses in get_disease_dx_list()"
"get_opioid_generic_list","Returns list of generic names for opioid drugs for NDC list"
"get_opioid_generic_to_grep","Returns string of generic opioid drug names to grep from NDC generic column"
"get_case_mgmt_yoy","Returns data.table of yearly summaries for case management"
"get_case_mgmt_interventions_yoy_stats","Returns data.table of yearly summaries of case management interventions"
"get_intervention_dtm_plot","Returns histogram plot of document text matrix for case management interventions"
"get_rpt_utilization_facts","Gets aggregate facts table for utilization report"
"get_rpt_variance_facts","Gets aggregate facts table for variance report"
"get_rpt_rolling_cases","Gets data for rolling open and closed cases rpt section of landing page"
"get_blr","Gets the billing leakage report from GBA"
"get_all_leakage","Gets the billing leakage report from GBA"
"write_billing_leakage_report_csv","Writes Billing Leakage Report to csv"
"write_billing_leakage_report_xlsx","Writes Billing Leakage Report to xlsx with no formatting"
"write_billing_leakage_report_xlsx_advanced","Writes Billing Leakage Report to xlsx with title formatting"
"get_member_risk_report","Compiles data into data.table for member risk report"
"write_member_risk_report_csv","Writes member risk report to csv in save_dir"
"set_intervention_length","Creates column in case management interventions data.table for length in days of the intervention from start to end date"
"set_active_intervention_years","Creates columns in case management interventions data.table indicating whether the member is active in case management in each year in specified parameter"
"set_addl_case_mgmt_intervention_cols","Sets intervention length, active years, and year floor date to case management interventions table"
"get_full_case_mgmt","Merges the original case management table with interventions and assessments"
"get_case_mgmt_benefit_assessment","Returns only the benefit assessment from case management assessments"
"get_case_mgmt_start_end_dates","Returns case management table of only person_id, sample_date, iSuite_Case_ID, ExtPlanMemberNum, Service_Type, Case_Start_Date, and Case_End_Date"
"merge_case_mgmt_med_claim","Appends case_mgmt columns to med_claim"
"get_dental_claim","Returns dental claims from med claims data table"
"get_dx_claims","Return patient identifiers for claims with diagnosis of interest"
"get_diabetes_2_pts","Return patient identifiers for claims with Type 2 Diabetes"
"get_rx_claims","Return patient identifiers for prescriptions from rx class of interest"
"get_antidiabtic_rx_claims","Return patient identifiers for prescriptions in antidiabetic class"
"get_eligibility_dates","Returns a rows per dates for each member that is e (along with other information on the dataset)"
"set_elig_plan_parse_cols","Generates full eligibility file with parsed plan description and roll column"
"get_eligibility_med_only","Returns only members who are subscribed to a medical or dental insurance plan"
"get_medical_plan_types","Returns all medical plan codes (+ dental)"
"get_member_csv_for_experian","Returns a data.table and csv of eligible members from a specified date to send for Experian data update"
"get_leakage_expert_unbundling_prc","Returns all procedures flagged by expert-based unbundling billing leakage"
"get_leakage_ncci_ptp_prc","Returns all procedures flagged by NCCI's PTP Coding Edits billing leakage https://www.cms.gov/Medicare/Coding/NationalCorrectCodInitEd/NCCI-Coding-Edits"
"get_leakage_expert_upcoding_prc","Returns all procedures flagged by expert-based upcoding billing leakage"
"get_leakage_expert_misc_coding_prc","Returns leakage patterns for misc coding"
"get_leakage_expert_multiple_treatments_prc","Returns leakage patterns for multiple treatments"
"get_deleted_codes","Returns list of procedure codes deleted from HCPCS in specified year"
"get_leakage_deleted_codes","Returns leakage report for HCPCS procedure codes deleted prior to use"
"get_leakage_uncovered_prc","Returns leakage pattern for claims submitted for uncovered patients"
"get_modifier_allowed_prc_codes","Returns allowable procedure codes per specified modifier"
"get_leakage_modifier_misuse_known_codes","Returns all procedures flagged by input modifier misuse with known compatible hcpcs codes"
"get_leakage_modifier_25_misuse","Gets misuse leakage claims for modifier 25"
"get_leakage_modifier_misuse_exclusion_codes","Returns all procedures flagged by input modifier misuse with compatible hcpcs codes that exclude codes from another modifier"
"get_leakage_modifier_59_misuse","Gets misuse leakage claims for modifier 59"
"get_leakage_modifier_overuse_known_codes","Returns data.table of claims where providers were flagged for overuse of specified modifier"
"get_leakage_modifier_25_overuse","Gets overuse leakage claims for modifier 25"
"get_leakage_modifier_overuse_exclusion_codes","Returns modifier overuse leakage claims where valid codes for appending modifier are the invalid codes for another modifier"
"get_leakage_modifier_59_overuse","Gets overuse leakage for modifier 59"
"credible_modifier_calc","Calculates a credible mean"
"get_leakage_provider_leie_prc","Returns all procedures flagged by providers in HHS LEIE list Somewhat fuzzy matching - name/address/business name and has to be in same city and state"
"get_leakage_provider_leie_rx","Returns all RX's flagged by providers / pharmacies in HHS LEIE list"
"get_leakage_cheaper_rx","Returns medications with a cheaper / generic alternative determined by the mean price of medications purchased in the same city and state within the past rx_days_back (365 days) that have the same NONPROPRIETARYNAME, ROUTENAME, and ACTIVE_NUMERATOR_STRENGTH (from the NDC)"
"get_ncci_ptp_codes","Gets Medicare's NCCI PTP procedure code table from xls for billing leakage https://www.cms.gov/Medicare/Coding/NationalCorrectCodInitEd/NCCI-Coding-Edits"
"get_expert_unbundling_codes","Gets expert unbundling procedure codes from xls"
"get_expert_upcoding_codes","Gets expert upcoding procedure codes from xls"
"get_mult_tx_codes","Gets procedure codes to include from multiple treatments leakage pattern"
"get_dpx_ref","Returns deprescribing reference"
"get_leakage_prc","Runs through all billing leakage patterns and returns procedures that are flagged"
"get_leakage_functions","Returns vector of billing leakage pattern functions"
"run_leakage_function","Function to run billing leakage pattern in get_leakage_prc()"
"run_leakage_function_error","Executed when an error occurs in run_leakage_function()"
"get_unbundling_prc_by_ref","Core function of get_leakage_ncci_ptp_prc() and get_leakage_expert_unbundling_prc() Both are essentially unbundling patterns TODO add documentation / parameters"
"get_hospital_pos_codes","Returns vector of hospital place of service codes"
"get_leakage_output_cols","Returns vector of columns to return in leakage patterns"
"get_rx_leakage_output_cols","Returns vector of columns to return in rx-based leakage patterns SUBJECT TO CHANGE!"
"get_claims_pt_id_cols","Returns vector of columns for member identification from claims"
"get_rx_pt_id_cols","Returns vector of columns for member identification from rx db"
"get_non_zero_claims","Returns med claims where bill sum for procedures is greater than zero"
"get_stats_paid_amts","Returns data table of mean, standard deviation, and mean plus one standard deviation of paid amounts for each procedure hcpcs code"
"fix_provider_zip","Changes provider zip to 5-digit format to calculate distance to provider"
"get_multiple_dx_dt","Returns melted data table of all multiple diagnoses in med_claim db"
"set_prc_groupings","Merges HCPCS procedure groups onto med_claim"
"set_dx_groupings","Merges ICD-10 diagnosis groups onto med_claim"
"set_comorbidities","Merges comorbidity scores onto med_claim"
"set_zip_dist","Merges distance from patient to provider zip codes onto med_claim"
"set_med_claim_addl_cols","Returns additional columns merged to med_claim per parameter settings"
"set_multiple_dx_dt_addl_cols","Returns diagnosis grouping and comorbidity columns on melted dx data table"
"iComorbiditiesRoll","The function takes ""roll_data"" and applies a rolling window calculation of comorbidities and conforms it to the ""id_date_data"""
"set_dx_ccsr_groupings","Merges ICD-10 CCSR diagnosis groups onto med_claim"
"set_custom_altum_comorbidities","Merges Custom Altum comorbidity scores onto med_claim"
"get_preventative_prc_iv","Creates indedpe"
"set_preventative_prcs","Merges preventative procedure groups onto med_claim"
"get_prevent_prc_conditions","Returns table of age and gender requirements for preventative procedures"
"set_substance_names","Adds ndc product table to the rx data.table"
"set_substance_names","Breaks out substance names into columns"
"set_route_names","Breaks out routes of administration into columns"
"validate_stringified_array","Checks if input is valid stringified array. Must have brackets. Strings must be surrounded by single or double quotes Does not support mixed type arrays. Elements of array must be unique. Wrote this because complicated to do pure regex"
"validate_quote_wrapped","Checks input if wrapped in single or double quotes"
"validate_item_in_str_array","Checks to see if needle (item) is in haystack (stringified array)"
"get_members_preventative_measures","Returns preventative measures (long not wide) from IV dataset - last 365 days"
"get_members_comorbidities","Gets members comorbidities (long not wide) from IV dataset"
"get_experian_hh_mosaic","Gets members Experian household mosaic from IV dataset (with decode / description)"
"get_intervention_inputs","Creates intervention inputs from outputs of prod_data for run thru intervention functions or"
"process_interventions","Runs the data through the intervention engine, does not fire existing interventions that are in the DB (checks existin)"
"get_intervention_controller","Returns vector of intervention functions"
"run_all_interventions","runs all the rules defined by the rule controller"
"get_required_intervention_cols","Returns character vector of fields to return from rule"
"int_bc_base","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_evaluate_disease","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_evaluate_treatment","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_evaluate_family","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_evaluate_meds","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_evaluate_bundles","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_communicate_dr","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_educate_process","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_educate_medication","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_educate_treatment","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_educate_options","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_educate_emotional","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_reinforce_treatment","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_refer_stoploss","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_refer_coordinator","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_bc_refer_counseling","selects those with any new breast cancer-related claim in the last month new dx if # of claims in last month = # of claims in last 6 months"
"int_diabetes_base","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_evaluate_disease","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_evaluate_meds","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_evaluate_comorbidities","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_evaluate_treatment","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_evaluate_bundles","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_communicate_dr","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_communicate_member","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_communicate_wellness","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_educate_process","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_educate_lifestyle","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_educate_exacerbation","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_educate_hyperglycemia","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_educate_medication","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_educate_testing","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_reinforce_treatment","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_refer_wellness","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_diabetes_refer_online","selects those with diabetes and pre-diabetes claim in last 6mo and high med claim risk prediction OR those with high endocrine 2nd lvl model risk"
"int_ed_base","selects those with high predicted risk of an ED visit in the next year"
"int_ed_evaluate_visits","selects those with high predicted risk of an ED visit in the next year"
"int_ed_evaluate_followup","selects those with high predicted risk of an ED visit in the next year"
"int_ed_evaluate_additional_bundle","selects those with high predicted risk of an ED visit in the next year"
"int_ed_communicate_dr","selects those with high predicted risk of an ED visit in the next year"
"int_ed_communicate_channels","selects those with high predicted risk of an ED visit in the next year"
"int_ed_educate_disease","selects those with high predicted risk of an ED visit in the next year"
"int_ed_educate_procedure","selects those with high predicted risk of an ED visit in the next year"
"int_ed_educate_meds","selects those with high predicted risk of an ED visit in the next year"
"int_ed_educate_care","selects those with high predicted risk of an ED visit in the next year"
"int_ed_educate_cost","selects those with high predicted risk of an ED visit in the next year"
"int_ed_reinforce_treatment","selects those with high predicted risk of an ED visit in the next year"
"int_ed_refer_PCP","selects those with high predicted risk of an ED visit in the next year"
"int_ed_refer_specialist","selects those with high predicted risk of an ED visit in the next year"
"get_warn_pct","Return warn percent for validation of claim field"
"get_error_pct","Return error percent for validation of claim field"
"get_validate_table","Returns validation data.table for single column of interest in claim db"
"validate_cpt_codes","Returns validation for HCPCS procedure codes"
"validate_dx_codes","Returns validation for ICD diagnosis codes"
"validate_modifier_codes","Returns validation for modifier codes"
"validate_zip_codes","Returns validation for zip codes"
"validate_med_claims","Returns all med claim validation test results"
"validate_rx_zip_codes","Returns validation for zip codes"
"validate_rx_claims","Returns all rx claim validation test results"
"validate_discharge_status_code","Validates that discharge status code is populated frequently enough"
"validate_temperature","Validates that temperature is populated frequently enough"
"validate_blood_pressure","Validates that blood pressure is populated frequently enough"
"validate_heart_rate","Validates that heart rate is populated frequently enough"
"validate_respiration_rate","Validates that heart rate is populated frequently enough"
"validate_IV","Validates the independent variables"
"validate_raw_db","Runs a full validation test of the raw database (e.g. redox-life)"
"run_validation_rule","Runs a validation rule"
"get_validate_patient_class_sparsity","TODO"
"test_msg_sparsity_info","TODO"
"test_msg_sparsity_warn","TODO"
"test_msg_sparsity_error","TODO"
"get_validate_sql_pat_types","TODO"
"get_validate_sql_window_days","TODO"
"get_validate_sql_visit_number","TODO"
"get_validate_sql_vital_types","TODO do we need this?"
"validate_records_per_month","Returns ggplot of count_field counts per month"
"validate_elig_records_per_month","Returns ggplot of new subscribed members in eligibility per month"
"validate_med_claim_records_per_month","Returns ggplot of med claims per month"
"validate_rx_claim_records_per_month","Returns ggplot of rx claims per month"
"validate_wellview_records_per_month","Returns ggplot of unique wellview users per month"
"validate_case_mgmt_records_per_month","Returns ggplot of case management users per month"
"validate_precert_records_per_month","Returns ggplot of precert cases per month"
"validate_graphics_to_pdf","Outputs a pdf of validation ggplots"
"validate_predictions","Outputs table of model predictions validated against DEV predictions"
"get_bea_data_from_csv","Returns data table of BEA csv data sourced from https://apps.bea.gov/regional/downloadzip.cfm"
"insert_bea_data","Appends new BEA data to existing table in SQL"
"get_bls_county_data_from_xlsx","Returns data table of BLS county employment xls data sourced from https://www.bls.gov/cew/downloadable-data-files.htm *data updated every quarter"
"insert_bls_county_data","Appends new BLS county data to existing table in SQL"
"get_bls_la_data_from_txt","Returns data table of BLS local area stats txt data sourced from https://download.bls.gov/pub/time.series/la/"
"insert_bls_la_data","Appends new BLS local area data to existing table in SQL"
"get_census_cbp_data_from_txt","Returns data table of census CBP area stats txt data sourced from https://www.census.gov/programs-surveys/cbp/data/datasets.html"
"insert_census_cbp_data","Appends new census CBP data to existing table in SQL"
"get_census_zbp_data_from_dat","Returns data table of census ZBP area stats txt data sourced from https://www2.census.gov/econ2015/CB/sector00/CB1500CZ21.zip (2015) and https://www2.census.gov/econ2016/CB/sector00/CB1600CZ21.zip (2016)"
"insert_census_zbp_data","Appends new census CBP data to existing table in SQL"
"get_zip_code_db","Returns zip_code_database from external db"
"get_asmts_master_file","Gets asmts_master XLS from file and validates entries and returns list of data.tables"
"save_asmts_db","Saves (and checks to see if needing update) asmts to database"
"get_asmts_db","Gets asmt* tables from database"
"get_member_asmts_db","Gets member_asmt* tables from database"
"save_member_asmts_db","Saves member_asmt* tables into the DB - currents does NOT consider existing member_asmt records in the DB"
"get_asmt_tables_info","Returns table info for asmt* tables"
"get_member_asmt_tables_info","Returns table info for member_asmt* tables"
"get_case_mgmt_v1_xls","Gets case_mgmt data from XLS"
"get_case_mgmt_v2_xls","Gets case_mgmt data from XLS (daily file)"
"save_case_mgmt_db","Save case_mgmt data to DB (inserts / updates) TODO - need to test update functionality"
"get_case_mgmt_db","Retrieves case_mgmt data from database"
"get_case_mgmt_dates","Gets dates on case management of a member"
"import_case_mgmt_from_zip","Import AHH case mgmt daily file from zip into database"
"try_import_case_mgmt_from_zip","try/catch wrapper for import_case_mgmt_from_zip - imports AHH case mgmt daily data from zip"
"get_case_mgmt_interventions_xls","Gets case_mgmt intervention data from XLS"
"get_case_mgmt_assessments_xls","Gets case_mgmt assessments data from XLS"
"get_census_v1_xls","Gets census file from XLS"
"get_hcpcs_codes","Gets HCPCS codes"
"get_hcpcs_modifiers","Gets HCPCS modifiers"
"save_hcpcs_codes","Saves out HCPCS codes reference (generated from claim file)"
"save_hcpcs_modifiers","Saves out HCPCS modifiers reference (generated from claim file)"
"get_ndc_product","Gets NDC product from XLS ***Note - after saving current from https://www.fda.gov/drugs/drug-approvals-and-databases/national-drug-code-directory (specifically https://www.accessdata.fda.gov/cder/ndcxls.zip) you MUST save back out to product.xlsx"
"get_deprescribing_db","Gets deprescribing file from XLS"
"get_med_prc_grouping","Returns grouped medical CPT codes into a data.table"
"set_icd_dx_grouping_cols","Returns grouped medical dx codes into a data.table"
"get_icd10_dx_grouping_db","Returns grouped ICD-10 medical dx codes into a data.table"
"get_icd9_dx_grouping_db","Returns grouped ICD-10 medical dx codes into a data.table"
"get_dent_prc_grouping","Return grouped dental CDT codes"
"get_prev_prc_ref","Returns reference for preventative procedures"
"get_icd10_dxccsr_grouping_db","Returns CCSR grouped ICD-10 medical dx codes into a data.table"
"set_icd_dxccsr_grouping_cols","Returns CCSR grouped medical dx codes into a data.table"
"save_icd10_dxccsr_grouping_db","Returns CCSR grouped ICD-10 medical dx codes into a data.table"
"get_major_rx_grouping_db","Returns Level 1 Major Drug Classes from first 2 GPI Digits into a data.table"
"save_to_db","General save to database function for daily data / first time"
"get_insert_update_data","Determines which records to insert, update, and do nothing with from import (from xls/csv?) data and DB data. Returns list."
"update_import_data","Update data in database function for daily feed"
"get_ss_vartypes","creates sql server varTypes list for use in iSqlQuery()"
"create_ss_vartypes","Creates list of vartypes for SQL Server import"
"truncate_table_db","Truncates a table in the database. Use with caution!"
"get_next_id","Gets the next (id) value from a table"
"set_id_col","Sets an auto-incremented id column on a data.table for inserting data into a database (with an integer based id column but no identity property)"
"update_table_db","Updates a table in the database given input data"
"set_missing_db_cols","Adds columns to input data.table if they are missing when compared to database table (For inserting data into database - for example, if a melt/cast does not produce all the columns in a data.table for insert, this will add those missing columns)"
"parse_flat_date","Converts string dates like ""110216"" or ""11022016"" to 11/2/16 date objects"
"fix_date_mixed_xlsx","For messed-up date(time) column on import This preserves order"
"format_zip","Formats zip codes to 5 digits"
"str_trim_character_cols","str_trim() all character columns in data.table / data.frame"
"set_data_col_names","sets standard column names for data.table"
"coerce_data_str","data.table column type coercer (mostly for get_*_db() functions)"
"first_uc","Makes first letter uppercase and all subsequent letters lowercase"
"importFunErr","Executed when an error occurs in importFun"
"importFunWarn","Executed when an warning occurs in importFun"
"insert_import_record_db","Save record in database of successful import"
"get_data_xls","Gets xls data from vector of filenames are returns single data.table"
"get_data_csv","gets csv data from vector of filenames are returns single data.table"
"get_data_filenames","Gets filenames from sub directory path and logs message (for XLS/CSV loading functions)"
"encrypt_person_id","Encrypts SSN into person_id column"
"set_parent_id","Sets a parent id column (from a parent table) on data given data's id (or code) column Essentially creates a X-ref table to the parent table and then merges that onto the input table Does not guarantee returned order of dat is same as input"
"get_eligibility_v1_xls","Gets eligibility data from XLS"
"get_eligibility_v2_xls","Gets (full) eligibility data from XLS"
"get_eligibility_dsv","TODO still working on...gets delimiter version of eligibility file"
"save_eligibility_db","Save eligibility data to DB (inserts / updates) TODO - need to test update functionality"
"get_eligibility_db","Retrieves eligibility data from database"
"get_eligibility_addl_xls","Gets the data from XLS of extra columns not on the originally eligibility file"
"get_subscribed_members","Returns eligible members on given date"
"import_eligibility_from_zip","Import magellan daily file from zip into database"
"try_import_eligibility_from_zip","try/catch wrapper for import_eligibility_from_zip - imports magellan daily data from zip"
"get_eligibility_blr_db","Gets eligibility from DB for BLR"
"get_dummy_member_names_file","Gets dummy member names from file (for discarding)"
"get_engagement_sequences_file","Gets engagement sequences from XLS in resource directory"
"save_engagement_sequences_db","Saves output of get_engagement_sequences() to database"
"get_engagement_sequences_db",""
"get_experian_csv","Gets Experian data from txt file - note this does format file names for SS importing purposes"
"get_all_experian_csvs","Gets all Experian csvs and combines into one file for import to database, adds date field"
"save_experian_db","Save experian data to DB (inserts / updates) TODO - need to test update functionality"
"get_experian_db","Retrieves Experian data from database"
"get_latest_experian_hh_mosaic_db","Return latest mosaic household code and plain english description for each member in experian data"
"get_experian_colname_xref","Import magellan daily file from zip into database"
"get_med_claim_v1_xls","Gets claim data from XLS (2017-present / VBA format)"
"get_med_claim_v1_csv","Gets claim data from CSV (2017-present / VBA format)"
"get_med_claim_dsv","Gets claim data from txt file (2017-present / VBA format)"
"format_med_claim_v1_cols","Formats columns of claims object"
"change_med_claim_v1_colnames","Changes names of columns of claims object"
"get_med_claim_v2_xls","Gets medical claim data from XLS (2016 / 623 / AS400 format) note - this required the "".xls"" files to be saved out manually to "".xlsx"""
"save_med_claim_db","Save medical claim data to DB (inserts / updates) TODO - need to test update functionality"
"get_med_claim_db","Retrieves medical claim data from database"
"get_med_claim_alpha_xls","Gets claim data from XLS (2016-present format - deprecated)"
"get_as400_colname_xref","Returns column crosswalk for AS400 claims (to 'claim' table names)"
"import_med_claim_from_zip","Import vba med claim daily file from zip into database"
"try_import_med_claim_from_zip","try/catch wrapper for import_med_claim_from_zip - imports med claim daily data from zip"
"get_short_med_claim_db","Retrieves medical claim data from database"
"get_med_claim_blr_db","Gets med claims from DB for BLR"
"get_plan_types_xls","Gets plan types data from XLS"
"get_precert_v1_txt","Gets precert data from txt file"
"save_precert_db","Save precert data to DB (inserts / updates) TODO - need to test update functionality / key fields"
"get_precert_db","Retrieves precert data from database"
"import_precert_from_zip","Import precert / UM daily file from zip into database"
"try_import_precert_from_zip","try/catch wrapper for import_precert_from_zip - imports precert / UM daily data from zip"
"save_prediction_validation_db","Saves out validated predictions table to db"
"save_data_errors_db","Saves out validated predictions table to db"
"get_hhs_leie_db","Gets U.S. Dept of Health and Human Services / Office of Inspector General - List of Excluded Individuals/Entities (LEIE) https://oig.hhs.gov/exclusions/exclusions_list.asp#instruct"
"update_hhs_leie_db","Updates U.S. Dept of Health and Human Services / Office of Inspector General - List of Excluded Individuals/Entities (LEIE) on database"
"get_hhs_leie_csv","Get the list of providers / businesses who are on the U.S. Dept of Health and Human Services / Office of Inspector General - List of Excluded Individuals/Entities (LEIE) Download this from https://oig.hhs.gov/exclusions/exclusions_list.asp#instruct 'XX-XXXX Updated LEIE Database'"
"get_leie_exclusion_types_html","For use by get_hhs_leie_from_csv() to get human-readable exlusion types onto the HHS LEIE Save ""https://oig.hhs.gov/exclusions/authorities.asp"" to ""hhs_leie_exclusion_types.html"""
"save_hhs_leie_db","Saves HHS LEIE to database"
"drop_hhs_leie_db","Drops HHS LEIE table from database if exists"
"leie_date_conv","For converting string date field in LEIE"
"save_rpt_rolling_cases_db","Saves rolling cases (landing page) to database"
"get_rpt_measures_file","Gets measures table from file to save to database"
"save_rpt_measures_db","Saves rpt_measures table to database (truncates existing first)"
"get_rpt_dimensions_file","Gets dimensions table from file to save to database"
"save_rpt_dimensions_db","Saves rpt_dimensions table to database (truncates existing first)"
"get_rpt_utilization_data","Gets utilization report data from database to produce aggregate fact table (consumed by get_rpt_utilization_facts())"
"save_rpt_utilization_facts_db","Saves (aggregated) rpt_utilization_facts to database"
"get_rpt_variance_data","Gets variance report data from database to produce aggregate fact table (consumed by get_rpt_variance_facts())"
"save_rpt_variance_facts_db","Saves (aggregated) rpt_variance_facts to database"
"get_rx_v1_xls","Gets (Magellan) medication data from XLS"
"get_rx_v2_xls","Gets (Magellan) medication data from XLS - rows to skip up top, ugh (v2)"
"get_rx_dsv","Gets Magellan data from delimiter separated values flat file"
"save_rx_db","Save RX data to DB (inserts / updates) TODO - need to test update functionality"
"get_rx_db","Retrieves RX data from database"
"get_generic_rx_list_from_xls","Gets the list of generic medications cross referenced to the brand name."
"import_rx_from_zip","Import magellan daily file from zip into database"
"try_import_rx_from_zip","try/catch wrapper for import_rx_from_zip - imports magellan daily data from zip"
"get_rx_blr_db","Gets Rx from DB for BLR"
"get_rxedo_colname_xref","Returns column crosswalk for RxEDO claims (to 'rx' table names)"
"get_rx_rxedo_dsv","Gets RxEDO data from delimiter separated values flat file"
"import_rx_rxedo_from_zip","Import RxEDO daily file from zip into database"
"try_import_rx_rxedo_from_zip","try/catch wrapper for import_rx_rxedo_from_zip - imports RxEdo daily data from zip"
"get_rx_rxedo_db","Retrieves RxEdo data from database"
"save_rx_rxedo_db","Save RxEDO data to DB (inserts / updates) TODO - need to test update functionality"
"save_blr_db","Saves Billing Leakage Report (BLR) to web database for portal consumption"
"save_member_infographic_db","Refreshes data consumption for the member chart on the members page Includes encounters (based on claims), interventions, the past incurred plot as well as program intervals"
"save_interventions_db","Saves interventions to database"
"get_interventions_db","Gets interventions from the database"
"get_intervention_journal_db","Gets intervention journal records from the database For intervention_journal_type_id: Assignment = 0 ResponseType = 1 ResponseSubType = 2 DueDate = 3"
"get_interventions_latest_info_db","Gets chart interventions view from the database"
"get_intervention_responses_file","gets intervention response options from file"
"get_predictions_db","Gets predictions from the database"
"save_model_predictions_db","Saves the model predictions to the database"
"save_model_predictions_live_db","Saves the model predictions to the database - most recent only (truncates table first)"
"save_model_reasons_db","Saves out model reasons to db"
"save_model_reasons_live_db","Saves out model reasons to db - most recent only (truncates table first)"
"save_subject_members_db","Saves new members to web subjects and subject members (concrete GBA specific implementation of subjects) tables, updates existing and sets members to not current (if applicable)"
"get_subjects_db","Gets subjects out of web database (abstract subjects or concrete subject_members)"
"save_subject_info_db","Gets member measures (eg comorbdities, preventative measures, etc) from iv dataset and saves to db"
"get_subject_id_xref","Gets cross-reference between person_id and subject_id for inserting into GBA_WEB"
"save_groups_db","Saves new groups (if present) into the database"
"get_groups_db","Gets data from (member) groups table of database"
"save_member_current_status_db","Saves out member_current_status table to database (side table risks and flags) - uses predictions/scores and"
"get_wellview_xls","Gets Wellview data from XLS Returns list"
"get_wellview_csv","Gets Wellview data from CSV files in directory Returns list"
"save_wellview_db","Save Wellview data to DB (inserts / updates) TODO - need to test update functionality"
"get_wellview_db","Retrieves wellview data from database"
"get_wellview_activity_dates","Returns first and last dates of wellview activity per person_id (encrypted ssn)"
"import_wellview_from_zip","Import wellview daily file from zip into database"
"try_import_wellview_from_zip","try/catch wrapper for import_wellview_from_zip - imports wellview daily data from zip"
"get_who_flu_csv","Gets WHO flu data from txt file - note this does format file names for SS importing purposes Download latest from https://apps.who.int/flumart/Default?ReportNo=12 or https://www.who.int/influenza/gisrs_laboratory/flunet/en/ > ""Download influenza laboratory surveillance data from any week"" Select by ""Country, area or territory"" Filter by: ""United States of America"" Year from ""2015"" Week from ""1"" Year to CURRENT YEAR Week to ""53"""
"save_who_flu_db","Save WHO flu data to DB"
"get_who_flu_db","Get WHO flu data from external database"
"colSdColMeans","Title"
".iBinVarFinalize","Internal use"
"elimRedundantCols","elimRedundantCols Finds all the columns that are redundant, by spearman correlation > threshold"
"elimRedundantCols_discrete","elimRedundantCols Finds all the columns that are redundant, by spearman correlation > threshold"
"fanOutAndWords","Fans out words of a string into separate rows for a datatable - ' and ' is the delimiter"
"fanOutDates","Produces a vector of dates given a start and end date. For datatables mostly Usage example: fanned_out <- date_interval[,list(date=fanOutDates(first_date,last_date)),by=list(id)]"
"fanOutWords","Fans out words of a string into separate rows for a datatable"
"getMakeRFTestDataset_score","Function to generate testset for iMakeRFDataset variants"
"getMakeRFTestDataset_train","Function to generate testset for iMakeRFDataset variants"
"get_action_db","Gets actions from database and does some cleaning"
"get_action_insert_update_list","Passing in a DT of currently firing actions and existing actions in the database (correct format needed) this function returns a 2 item list of what actions are to be inserted and what need to be updated"
"get_param_values","Returns a list of parameters and parameter values for a given rule"
"get_suggested_actions","Returns a datatable of actions, priorities and action descriptions of a rule"
"hello","Hello, World!"
"iAES","Gets an AES encyption cipher"
"iAddDxCCSGroups","iAddDxCCSGroups Adds level 1 and 2 CCS diagnosis groupings to an input datatable with a diagnosis column. Accepts both ICD9 and 10 diagnoses."
"iAllWordsToDTM","Produces a DTM of all words and nothing else (ie no ngrams, no word stemming, etc)"
"iAppendDTRow","Appends a row to the end of a datatable Inserts NA's if cols in x don't exist in end_row"
"iApplyRolling","TO BE DEPRECATED USE iRollDT"
"iAreaStats","gather latest records of area stats (socioecono / marketforces) TODO check if tables in table_list exist"
"iAsDate","return date from month/date/year or 'Jul 28 1907 12:00AM' style dates but can be 1 or 2 digit months & days"
"iAsDateDT","iAsDate for data.tables"
"iBabble","Wrapper function for babble that handles errors more gracefully.  See ?babble for documentation."
"iBabbleGramDTM","Similar to iNGramDTM, except the n-grams do not have to be in sequential order."
"iBagOfWords","Returns a datatable of bag-of-words style text mining"
"iBigCast","Casts (dcast) a big dataframe DOES NOT WORK YET!!! Too many rows... need to figure out a way to ""collapse"" rows together with same id and date"
"iBinVarCategorical","Discretizes a categorical independent variable (x) to its dependent variable (yUse)"
"iBinVarNumeric","Discretizes a numeric independent variable (x) to its dependent variable (yUse)"
"iBins","Fast Discretize multiple continous or categorical variables (x) against a specified target variable (y)"
"iBins2","Fast binning algorithm.  Discretizes a dataset (xUse) to a target (or dependent) variable (yUse)."
"iBinsParallel","Parallized version of iBins2"
"iBinsParallel2","Parallized version of iBins2"
"iBoot","Calculates the confidence interval by bootstrapping the dataset"
"iBuildAndTestModels","Builds models from data to random forest.  Contrains 3 stage variable selection, first by SAD importance, then by colinearity with a more signficiant variable, then by random forest.  The final models are the fit with the remaining variables."
"iBulkSQLSave","Fast sql saving using BULK INSERT"
"iCbindTo","Fast version of cbind for data tables.  dt2 is appended to dt1, so runs faster if the larger data table is dt1."
"iChangeBool","returns 1 if there is more than one value in set, 0 if only one value, NA if no values"
"iChangeLast","returns the difference in the last 2 records (returns numeric!)"
"iCheck.data.table","Performs data santify checks on a production input file using the data profile generated by iProfile.data.table of your training set."
"iCheckPredictors","Checks for congruence between the dataset (xrf) and the model (rf)"
"iClassificationAccuracy","prototype evaluation metric"
"iClassificationReport","Reports on predicitve accuracy for 2 class problems, includes a formatted truth table, sensitivity, specificity, positive predicted value, negative predicted value, F1 score, etc."
"iCleanCorpus","Cleans the text in a corpus.  By default, all cleaning methods are used: strip whitepace, remove punctuation, remove numbers set to lower case, remove stopwords, replace words with their wordstems.  Set the corresponding function parameter to FALSE to skip execution of the cleaning method."
"iCleanNumericCol","iCleanNumericCol returns raw numbers from test scores - essentially strips all non numeric/periods"
"iCleanPhoneNumber","Cleans a phone number to 10 (character) digits Returns less than 10 digits too"
"iCleanText","Cleans the text in a text array (""sentence"").  By default, all cleaning methods are used: remove punctuation, remove numbers set to lower case, and remove control characters.  Set the corresponding function parameter to FALSE to skip execution of the cleaning method."
"iCleanZipCode","Cleans a zipcode to 5 (character) digits Returns less than 5 digits too"
"iCompare.categorical","Determines the distributional shift between two populations of categorical variables by determine the frequency of occurence for for each category, and summing the differences of these frequency between the two population (divided by 2).  Return value of 0 indicates an identical categorical distribution.  Return value of 1 indicates completely different categories."
"iCompare.data.frame","Computes an number of statistics on a data frame (containing either categorical, numeric or both) to identify distributional shifts between two samples."
"iCompare.vector","Computes an number of statistics on a vector (categorical or numeric) to identify distributional shifts between two samples."
"iConfusionCalc","Calculates the frequencies from a confusion matrix by predicted class and by actual class."
"iConfusionVisualization","Visualizes confusion matrix frequencies (as genearted by iConfusionCalc) in a heat map"
"iCountNonNA","Counts the number of non-NA values in x."
"iCountNonzero","Counts the number of non-zero values in x."
"iCountUniqueNonNA","Counts the unique number of non-NA values in x."
"iCreatePairs","Return a dataframe of all possible pairs of elements of a vector"
"iCut","cuts a continuous value into factors, based on the distribution of observations in the sampleset"
"iDTM2data.frame","Does the same thing is data.frame(inspect(dtm)), except it is faster and does spit out the annoying output that fills up your screen buffer."
"iDTM2data.table","Does the same thing is data.table(inspect(dtm)), except it is faster and does not spit out the annoying output that fills up your screen buffer."
"iDXSequence","function for assigning p (primary), s (secondary), n (not diagnosed with) to ICD9 vars"
"iDataCountByMonth","iDataCountByMonth Pass in a datatable (or sql table name) - returns counts by month"
"iDatasetCrossReference","Used for exporting a model to Java"
"iDcast","Peforms a chunked version of dcast for casting a very large dataset."
"iDecodeMDC","MDC decoder Decodes a vector of integers or characters from the major diagnostic category (MDC) to its descrition.  See https://en.wikipedia.org/wiki/Major_Diagnostic_Category for more information on MDC."
"iDecrypt","Decrypts text using AES encryption."
"iDedupe","Determines if records are potentially duplicate"
"iDetectNonStationary","Detects Systematic bias from the mean"
"iDetectOutliers","Detects the outliers in the numeric columns given a data.table."
"iDiscretize","Discretize multiple continous or categorical variables (x) against a specified target variable (y)"
"iDiscretize.bin.lookup","This function is retruns the bins corresponding to the provided sample (samplex).  This function is used by iDiscretize.predict to generate a prediction sampleset."
"iDiscretize.bin.lookup2","This function returns the bins corresponding to the provided sample (xi).  This function is used by iDiscretize.predict2 to generate a prediction sampleset."
"iDiscretize.categorical","Discreteize single factor (x) with a specific target variable (y)"
"iDiscretize.continuous","Discretize a single coninuous variable (x) with a specific target variable (y)"
"iDiscretize.explain2","This function produces explain reasons for each sample.  The reasons are manually defined for each bin.  As a starting point, you can define the reason as the variable name by preparing your list of bins (created by iDiscretize.bins) with the following commands: prepared_bins <- do.call(""rbind"",bins); prepared_bins$reason <- paste(prepared_bins$x_name);"
"iDiscretize.predict","Using a bin model (bins) and a prediction dataset (x), this function makes a prediction for each sample in x.  The prediction is based on the VOTING_FUN, by default the mean, of all of the corresponding bins for the sample.  The bin model should be developed using iDiscretize."
"iDiscretize.predict.spline","bin predictions using spline interpoloation (not tested-did not outperform step function of discretizer)"
"iDiscretize.predict2","Prediction framework optimized for large batches... unlike iDiscretize.predict, which predicts sample by sample, this function first looks up all predictions for each variable and then calculates the prediction after all predictor variables have been processed."
"iDiscretize.spline","Converts the numeric bins in a bin model into splines"
"iDiscretize.spline.convert","Converts the numeric bins for a variable into splines"
"iDiscretizeByBins","Breaks a named list of the breakpoints for each continuous variable"
"iDisinctNonZeroCount","return number of elements that aren't zero (or NA) - if only NA values, returns NA"
"iEDA.ROC","Receiver operator characteristic (ROC) curve (under development/testing)"
"iEDA.bins","Generates a bin visualization for each varaible in the model"
"iEDA.bins.individual","Generates a bin vizualization for an individual variable in a model"
"iEDA.liftCurve","Plots a lift curve for the specified model (that is currently attained through stepwise regression) TO BE DEPREACTED.  Use iEDA.liftCurve2 instead."
"iEDA.liftCurve2","Second version of the lift curve generator.  Improved as it doesn't use ggplot's smoothing functions... just calculates the straight mean for each quantile.  This version also plots the number of observations and the mean absolute deviation per quantile."
"iEncrypt","Encrypts text using AES"
"iExcept","returns items in set 1 that either are not in set 2 or are different (ie SQL EXCEPT)"
"iExplodeCols","take a dataframe or data.table with an id column and 1+ data columns with 'CSV' fields and 'explode' them into counts summing per row if needed"
"iFactorCrossReference","List all factors, their categorical values, and their factor enumerations in a data.frame.  Used to dump a RF model in R for import into Java."
"iFindPHI","Identifies potential personal health information (PHI) in the list of tables provided"
"iFindPHI.data.frame","Identifies potential personal health information (PHI) in the data frame specified"
"iFindRedundantVars","Select redudant or 0 MAD variables from an RF (no nulls) dataset Based on MAD and correlation between variables"
"iFindRedundantVars2","Select redudant or 0 MAD variables from an RF (no nulls) dataset Based on MAD and correlation between variables"
"iFirst","Title"
"iFirstCharacter","opposite of iLastCharacter (returns first of vector)"
"iFirstNumeric","returns the first numeric NA"
"iFirstWord","returns first word in a string first word defined by characters between 1 and first space-1"
"iFmeasure","Function that calculate f-score for a document term matrix."
"iGenerateDDL","Takes a data.frame or data.table and renders the SQL DDL that would fit the data. Automatically determines data types from the data, varchar lengths, etc."
"iGenerateLiftScatterCorr","Gen lift curves, confusion matrices, correlations for Test and Train Have to set up these flags to be called in the loop below (via modPrefix) Note: using ALL the train/test data (< 15 days) vs. the Tx subsample"
"iGenerateModelImportances","saveModelImpCSV - saves and returns a table of all of the IV importances in the final models"
"iGeometricMean","Computes the geometric mean"
"iGetAntimicrobialsNDC","Gets a data.table listing of all antimicrobials (antibiotic or antifungal) found in the National Drug Code database."
"iGetBinValues","Fast Bin Sample"
"iGetDiastolicBP","takes string in form of ""123/45"" or ""123/45 standing 120/80 sitting"" or ""123 /45"" etc. and returns blood pressure values as numbers TODO add validation..."
"iGetEnglishDictionary","Gets a list of all words in the english dictionary."
"iGetFirstNames","Gets a list of the most common first names, based on the 1990 US census"
"iGetLastNames","Get a list of the most common last names, based on the 1990 us census"
"iGetMAPBP","takes string in form of ""123/45"" or ""123/45 standing 120/80 sitting"" or ""123 /45"" etc. and returns blood pressure values as numbers TODO add validation..."
"iGetMDCTable","MDC lookup table Get a lookup table for cross references the major diagnostic category (MDC) to that of its description"
"iGetNABin","Global factor level for the NA bin"
"iGetNDC","TO BE DEPRECATED... added NDC to lazy load... just need to reference ""NDC_product"" and the data will automatically load. Gets NDC (downloaded from //www.fda.gov/Drugs/InformationOnDrugs/ucm142438.htm (zip))"
"iGetNGrams","Wrapper function for get.ngrams that handles erros more gracefully"
"iGetNGramsSorted","Wrapper function for get.ngrams that handles erros more gracefully, and also sort grams (if you don't care about word order)"
"iGetNonOverlappingRandomSample","TO BE DEPRECATED Selects a random sample for a longitudinal dataset that ensures none of the samples overlap (or are not independent)."
"iGetOtherBin","Global factor level for the other bin"
"iGetStopwords","Souped-up stopword function that combines stopwords from multiple sources."
"iGetSystolicBP","takes string in form of ""123/45"" or ""123/45 standing 120/80 sitting"" or ""123 /45"" etc. and returns blood pressure values as numbers TODO add validation..."
"iGetTree","Wrapper function for getTree that formats the split point and prediction to a higher level of precision."
"iGridSearchRF","Grid search the parameters of the random forest in an effort to tune a model."
"iGroupGroupsLookup","Takes a list of vectors of ID's and groups them further if ID's are shared across groups. Returns a data.table."
"iGroupPairsLookup","Takes pairs of ID's and groups them further if ID's are shared across pairs. Returns a data.table."
"iImportBEA","Imports csv's into BEA_CA05N_personal_income_by_industry from"
"iInstallStandardPackages","Installs the standard packages used commonly by IMIDEX Get Rtools first - manual install: https://cran.r-project.org/bin/windows/Rtools/"
"iIsNum","Returns back true if string is a numeric (ie ""1.3"") or false if not"
"iLOCF","iLOCF fast rolls (no id/date) values forward into NA's in a datatable that has id/date fields"
"iLapply","same as lapply, just faster for large data.frames as it doesn't coerce it to a list"
"iLast","Title"
"iLastChangePct","computes percent change in last 2 unique readings"
"iLastCharacter","Title"
"iLastNewChangePct","computes percent change in last 2 unique readings"
"iLastNumeric","returns the last numeric NA"
"iLastZero","returns 0 if no records found"
"iLatestRoll","iLatestRoll Latest values for a time series. Much faster and less memory-intense than iMeCaCoRollDT(). Takes a ""melted"" data.table as roll data (can take ""casted"" but not tested). If days_since is set to true, will produce the # of days since the latest value was seen. In that case, set your value_field to a numeric from your date_field (eg. roll_data[,value_field:=as.numeric(date_field)]) *NOTE can only pass all numerics or all characters currently."
"iLoadRDS","Loads all RDS files that exist the specified directory into the workspace."
"iLoadTables","Loads all tables listed from the specified database into your default environment, creating one object per table."
"iMAD","Computes the mean abolute deviation from the sample mean of x"
"iMFV","Gets the most frequent value of x"
"iMFVF","Gets the frequency of the most frequent value of x"
"iMakeDTM","Turns a corpus into a a DTM, just like how DocumentTermMatrix does it, however is built to work for both production and development."
"iMakeDateRanges","Given an object of id's and date ranges (start and end date), produce the dates per ids. Can also have other data that will be joined on at the end"
"iMakeNames","Standard method of conforming column names to be syntaically valid."
"iMakeRFDataset2","TO BE DEPRECATED USED iMakeRFDataset2 Prepares a dataset for random forest by, stripping categoricals with over 32 classes (randomForest cannot handle), imputing all NA values, and creating dummy variables for all NA values."
"iMakeRFDataset_discretized","Prepares a dataset for random forest - correct names, outlier detection, dicretization, redundant variable elimination"
"iMakeRFDataset_discretized_train","Prepares a dataset for random forest - correct names, outlier detection, dicretization, redundant variable elimination"
"iMax","Title"
"iMaxConsecutive","function finding maximum consecutive run..."
"iMaxDate","Title"
"iMaxNumeric","these force a numeric output"
"iMaxNumericNA","Title"
"iMaxZero","this version of iMax returns a 0 if there are no records instead of an NA"
"iMeCaCoRollDT","iMeCaCoRollDT This function has 2 uses for data columns with ""factors"" (not actual factors, rather a finite #of strings). The general idea is to pass the same 'id_date_data' data.table that you'd pass into iRollDT but 'roll_data' has 1 or more columns (after the 'id_field' and 'date_field' columns) with an event type that you either wish to count the past occurences of (in the window period defined in 'window_days') or time since the latest or earliest event type. ***Be careful about passing more 3 columns in - haven't totally verified the output of this. To use either type (count or time since): 1) melt cast on sum of count (but do not include a count column) and then roll - to use, set stats_fun=""sum"" and keep time_units=NULL 2) melt cast and calculate time since latest or earliest event type occured - to use, set stats_fun=""max"" (latest) or ""min"" (earliest) and set time_units=""days"",""hours"",""minutes"" or ""seconds"""
"iMean","Title"
"iMeanNA","Title"
"iMeanNumeric","Title"
"iMedian","Title"
"iMergeAllList","iMergeAllList Merges all datatables in a list. They must all have the same 'by' columns."
"iMin","catches for max and min which produce warnings in above functions (if no data to get max/min, R spits out warning - this"
"iMinNumeric","Title"
"iMode","Title"
"iModelReport","Builds a report that evaluates a model, showing training and test lift curves, quantile measurements, goodness of fit measurements and predictor variable visualizations."
"iModelReportPDF","Builds PDF report describing the lift of the models, the variables in it, etc."
"iNGram","Wrapper function for ngram that handles errors more gracefully.  See ?ngram from documentation"
"iNGramDTM","Process a string into an n-gram document term matrix."
"iNegateCorpus","Function that creates a corpus from sentences that get iNegation properly run on them within this function. Just pass in raw sentence strings."
"iNegation","Function that appends a prefix to words in ""negative"" parts of sentences (ie after ""isn't"")."
"iNewISS","produces New ISS score from vector TODO assign 99? or no - Currently no TODO figure out NA? (no values, etc.)"
"iNextChangePct","computes percent change in first 2 readings"
"iPackage","Packages up the R project."
"iParseAddress","return parsed parts of address returns data.table object"
"iPrecision","Function that calculate the precision for a document term matrix."
"iPrepareNDC","Reshapes and collapses the NDC table into one row per PROPRIETARYNAME, NONPROPRIETARYNAME, and SUBSTANCE name columns and provides (1 or 0) counts of PHARM_CLASS and DEA_SCHEDULE. Mostly for use in iRxLookup()"
"iProfile.data.frame","profile a data from - for data validation purposes"
"iProfile.data.table","Summarize all of the columns of a data table across a variety of statistic metric: min, max, skew, most frequent value, sparsity, data type, etc."
"iProfile.table","profiles a list of database tables.  For data validation purposes"
"iQuantile","evaluates the predictions against the actuals by breaking it up into the specified number of quantiles (e.g. deciles = 10, quntiles = 5, etc)."
"iQuantile.randomForest","Calculates the quantiles (predicted v actual) for a random forest"
"iRFConfusionCalc","Calculates the frequencies from a confusion matrix by predicted class and by actual class for both the training set and the test set (if exists) in a random forest model."
"iRFConfusionVisualization","Visualizes confusion matrix frequencies in a heat map for the training and test sets (if exists) of a random forest, stratified by predicted class and by actual class."
"iRFLiftCurve","Plots a lift curve for a random forest model.  TO BE DEPRECATED.  Use iRFLiftCurve2"
"iRFLiftCurve2","New and improved lift curve generator for random forests"
"iRFTree2dendrogram","Converts a single tree (see getTree in randomForest) to a dendrogram that can be later plotted as such: plot(d,center=TRUE,leaflab='none',edgePar=list(t.cex=1,p.col=NA,p.lty=0)) where 'd' is the dendrogram created by this function."
"iRFtX","Function the builds a random forest where overlapping or non-independent samples exist.  Samples that are not independent exist in the same group (as defined by ""ids"").  This function randomly selects a sample from each group (""ids"") and trains a model on it with ntree, then repeats that nperm times, combining the result into one tree"
"iRange","Computes the range that all values exist in.  minObs defines the minumum number of non-NA values required to compute the statistic (default is 2)."
"iRangeNA","returns NA if 1 or 0 elements in x, otherwise iRange"
"iRank","Similar as the rank() function, however treats NA values different.  By default, NA's are assigned NA.  Also, this function will scale the rank into a percentile (bounded between 0 and 1)"
"iRbindlist.fill","Takes a lists of names of varying lengths and combines into a data.table.  kind of like rblindlist and rbind.fill"
"iRecall","Function that calculate the recall for a document term matrix."
"iResample","Safe version of the function ""sample"" where x is always treated as a vector to choose from even when the length of x equals 1 (where ""sample"" would treat it as a numeric to choose a value between 1:x)"
"iRoll","TO BE DEPRECATED USE iRollDT Calculates a rolling window statistic the conforms to the destination date and ID using the source data."
"iRollDT","iRollDT Fastest rolling function known to man"
"iRollDTChunked","iRollDTChunked Same as iRollDT except can handle huge dataset by chunking up the processing by the number of variables specified by chunk_size"
"iRollDTParallel","CURRENTLY NOT FUNCTIONAL Parrelized version of iRollDT"
"iRollDT_na_fill","iRollDT_na_fill Fill NA values from iRollDT based on on an input xwalk ***NEEDS documentation***"
"iRoughTrend","iRoughTrend Variable trending function for moving windows produced by iRollDT. A DT is passed in and the same DT is returned with the trend variable(s) appended to the end. The idea is to compare to windows - we compare a shorter window with a longer one (that includes the shorter window). If we are seeing how the last 7 days is trending, we compare the past 7 days with the past 28 (or any value longer) as such: (val_t7-(7/28)*val_t28)*((7/28)*val_t28) for percent trend val_t7-(7/28)*val_t28 for actual trend If percent is returned, it's (+/-)0-1(or more) not 0-100. Similar to MACD. Unless roll_data is keyed, can't guarantee the same row order is returned"
"iRxLookup","This is a heuristic lookup function that takes a character string (""x"") for a medicaiton order and looks up the most likely record in the Food and Drug Administrations National Drug Code Directory (aka ""NDC""). Use coerce_rx_list (list(c(""1"",""2""),c(""3"",""4""),...) to replace certain words (or Rx's) to manually improve matching. The database is checked into SVN under external/data and needs to be refreshed from time to time by downloading hte NDC Database File from http://www.fda.gov/Drugs/InformationOnDrugs/ucm142438.htm Matches PHARM_CLASS(es) and DEA schedules from NDC lookup table to an input vector of hand entered RX's"
"iRxLookupByName","Similar to iRxLookup but also pass in a vector of names of drugs (proprietary, nonproprietary, substance names all can go in this list) that you're looking for a match of in the NDC. These match to the NDC which then matches to rx_vec. If ndc_product_count=1, there was a match found. The idea is for finding groups of drugs here. For example, you can pass in a lookup_vec=c(""ativan"",""seroquel"",""lorazepam"") and all matches from your rx_vec will be returned with ndc_product_count=1 and non matches will have ndc_product_count=0. Initially used to support (hearth move out) rules."
"iRxRoll","Matches and rolls PHARM_CLASS and DEA (from NDC lookup table) on a hand entered RX / person / date table"
"iRxRollByName","Rolling function similar to iRxRoll but takes a vector of RX names to look against - any input RX's that those match return back a hit. For further explanation, see iRxRoll and iRxLookupByName."
"iSafeUnique","iSafeUnique Does a unique() on an object. If object is a data.table, uses eval(). If there were keys on the input data.table, this re-keys the same keys set before returning. The reason for this is that keying data.table's can have odd effects on unique(DT). TODO figure out a better way than eval() ... get() is probably too difficult to use"
"iSampleTemporalIndependence","Selects a random sample for a longitudinal dataset that ensures none of the samples overlap over time.  Ensures samples are independent."
"iScore","Turns the scores into a predictions using the referenceScores generated by iScore.getReference"
"iScore.getReference","Get's a reference matrix used to interpolate scores based on the prediction using the function iScore"
"iSearchNDC","Searches the pharmacy classes and drug names in the National Drug Code data for the specified search term."
"iSeason","returns season from max dates (right now goes from 2007-2014...)"
"iSeasonApprox","returns season from max dates (approximately...) uses lubridate library to extract day of year..."
"iSelectByMAD","Selects variables by the highest MAD m"
"iSelectByRF","Selects variables using random forest."
"iSelectNonColinear","Selects variables that are not colinear."
"iSentiment","TO BE DEPRECATED - USE iSentiment2 iSentiment() implements a very simple algorithm to estimate sentiment, assigning a integer score by subtracting the number of occurrences of negative words from that of positive words.  Also iSentiment counts the number litigious words, uncertain words, modal weak wors, and modal strong words."
"iSentiment2","iSentiment2() implements general algorithm for assigning a sentence a sentiment score based on the varies categories represented in the data.table sentiment_dt.  This data table must have the key set to the column that denotes the ""word""."
"iSetup","Sets up the test directory and vignettes for the project"
"iSetupLog","Sets up the logging architectures."
"iSparsity","Title"
"iSplineFUN","Creates a spline function"
"iSplineInterpolate","Interporalates x using the spline function created by iSplineFUN"
"iSplitRandomly","Splits a dataset randomly"
"iSplitter","iSplitter strsplit like function for use by v_iSplitter for using in a data.table"
"iSqlQuery","iSqlQuery Returns data.table from an SQL query. Currently uses RODBC::sqlQuery as the core ODBC database function"
"iSqlSave","iSqlSave Returns data.table from an SQL query. Currently uses RODBC::sqlQuery as the core ODBC database function"
"iStepwise","Uses stepwise addition to select variables for a bin model"
"iSum","return sum of all non-zero vals -> if only NA values, returns 0"
"iSum2","like iSumNA2 but returns NA if only NA values"
"iSum2NA","iSum2 that returns a numeric NA"
"iSumNA","iSum that returns a numeric NA"
"iSumNoNA","return sum of all non-zero vals -> if only NA values, returns NA"
"iSumNonZero","Sums the number of non-zero values in x.  iCountNonzero is not titled correctly"
"iSumZero","returns 0 if there are no values in x"
"iTableList","Gets the list of tables for the specified SQL server database"
"iTermToNGram","Returns an n-gram given an array of words"
"iTextToDTM","Turns a list of documents into a document term matrix."
"iTreesToCSV","Writes to a CSV file all trees in a random forest. Used to dump a RF model in R for import into Java."
"iTrend","difference in most recent observation and average of all other observations removes all NAs from vector...returns NA otherwise if any NAs in set"
"iTrendUnique","unique version of above"
"iTrimText","Trims leading and trailing spaces from text."
"iTruncateCategories","Truncate the least frequent categories and puts them all in a single ""all other"" category. This fucntion truncates the number of categories in a vector to the number (n) specfied"
"iUniqueCount","count of unique values in x"
"iVarImpPlot","Generates a variable importance plot for random forests.  Just more legible than the standard varImpPlot."
"iView","much better than waiting for View..."
"iViewTail","much better than waiting for View..."
"iWhichColsHaveInformationValue","Takes in a data frame or data table and returns a boolean vector indicating which columns or varaibles have any informaton value. Primarily used for coarse choosing of an X dataset, where any variables that are all NA or have no variance can be excluded from further processing."
"iWordCount","Returns number of words in a string (mostly for it's vectored version v_iWordCount for datatables)"
"iZipDistanceDT","Return data.table with distances between zip columns, counties too if specified"
"imidexR2","imidexR2: A package for building predictive models"
"insert_update_action_db","Passing the list output of get_action_insert_update_list() into this updates and inserts actions into the web-facing database TODO add in check for as_of_datetime to be date or posixct"
"isSorted","Determines if X is sorted"
"ll","Lists objects by size"
"makeBinViewerPDF","Version of bin visualizer that outputs all the bin visualizations to a pdf file"
"meanQuantiles","meanQuantiles Non-parametric way to empirically calculate CIs (a la Richard cave-man), calc mean and then means of above and below mean samples"
"myfunc","Function that gets the name of an object"
"run_rule_fun","Generic wrapper for running a rule function from a string (of the rule name)"
"safe.ifelse","Version of ifelse() designed for dates - to fix problem of date objects being turned into numerics"
"sort_csv","Takes a delimited separated value field and re-sorts it"
"v_iCleanPhoneNumber","Vectorized version of the function"
"v_iCleanZipCode","Vectorized version of the function"
"v_iFirstWord","Vectorized version of the function"
"v_iIsNum","Vectorized version of the function @param x"
"v_iSplitter","v_iSplitter strsplit like function for using in a data.table @param x"
"v_iWordCount","Vectorized version of the function"
"v_sort_csv","Vectorized version of the function"
"wrap_in_brackets","surround characters with brackets can be for exact regex search"
